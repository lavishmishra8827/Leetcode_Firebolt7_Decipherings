import math
from functools import lru_cache
class Solution:
    def splitArray(self, nums, m):
        @lru_cache(None)
        def dp(m,index):
            if index==len(nums):
                return math.inf
            if m==1:
                return sum(nums[index:])
            first_part_sum=0
            min_sum_now=math.inf
            for i in range(index,len(nums)):
                first_part_sum+=nums[i]
                further_ans=dp(m-1,i+1)
                if first_part_sum>further_ans:
                    min_sum_now=min(min_sum_now,first_part_sum)
                    break
                else:
                    min_sum_now=min(min_sum_now,further_ans)
                '''
                min_sum_now=min(min_sum_now,max(first_part_sum,dp(m-1,i+1)))
                '''
            return min_sum_now
        return dp(m,0)
nums = [7,2,5,10,8]
m = 2
nums = [1,2,3,4,5]
m = 2
nums = [1,4,4]
m = 3
nums = [7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,10,8,7,2,5,2,5,10,8,7,2]
m=50
sol=Solution()

print(sol.splitArray(nums,m))